global:
  imagePullPolicy: Always
  ###vault:
  ###  host: ip
  ###  name: vault
  ###  vaultToken: someToken


frontend:
### В чарте frontend отсутствуют некоторые важные файлы. Поймите какие и опишите их.
  replicas: 1
  revisionHistoryLimit: 15
  strategy:
    type: Recreate
  service:
    port: 80
  ingress:
    host: YOUR_STUDENT_HOSTNAME.students-projects.ru # Корректный домен будет указан в задании
    path: /
    pathType: Prefix
  containerPort: 80
  image: jalambakisa/sausage-frontend:latest
  resources:
    requests:
      memory: "128Mi"
      cpu: "100m"
    limits:
      memory: "128Mi"
      cpu: "1"
  nginxConf: nginx.conf

backend:
  annotations:
    path: /actuator/prometheus
    port: "8080"
    scrape: "true"
  env:
    postgresUri: jdbc:postgresql://postgresql:5432/sausage-store
    postgresUser: store
    postgresPassword: storepassword
    reportPath: /logs/reports
    logPath: /logs
  service:
    port: 8080
  revisionHistoryLimit: 15
  replicas: 1
  strategy:
    type: RollingUpdate
  ### Опишите стратегию RollingUpdate для бэкенда
  image: jalambakisa/sausage-backend:latest
  imagePullPolicy: Always
  resources:
    requests:
      memory: "256Mi"
      cpu: "100m"
    limits:
      memory: "512Mi"
      cpu: "1"
  containerPort: 8080
  livenessProbe:
    httpGet:
      path: /actuator/health
      port: 8080
    initialDelaySeconds: 5
    periodSeconds: 10
  ### Опишите LivenessProbe для бэкенда
  vpa:
    updatePolicy:
      updateMode: "Recreate"
    resourcePolicy:
      containerPolicies:
        - containerName: "*"
          minAllowed:
            cpu: 25m
            memory: 0Mi
          maxAllowed:
            cpu: 25m
            memory: 500Mi
          controlledResources: ["cpu", "memory"]
  ### Опишите VPA для бэкенда

backend-report:
  replicas: 1
  revisionHistoryLimit: 15
  strategy:
    type: Recreate
  image: jalambakisa/sausage-backend-report:latest
  containerPort: 8080
  resources:
    requests:
      memory: "128Mi"
      cpu: "100m"
    limits:
      memory: "256Mi"
      cpu: "250m"
  livenessProbe:
    httpGet:
      path: /api/v1/health
      port: 8080
    initialDelaySeconds: 5
    periodSeconds: 10
  hpa:
    minReplicas: 1
    maxReplicas: 3
    averageUtilization: 75
### Опишите значения для backend-report
### Приложение должно использовать стратегию Recreate
### Приложение использует переменную PORT - порт, на котором оно запустится и DB - Uri-подключение к mongodb. 
### DB положите в Secret, PORT в ConfigMap
### Опишите HPA для backend-report

infra:
  postgresql:
    image: postgres:14.18-alpine3.22
    containerPort: 5432
    env:
      POSTGRES_DB: sausage-store
      POSTGRES_USER: sausage-user
      POSTGRES_PASSWORD: sausagepassword
  ### Опишите необходимые переменные для развертывания PostgresQL в кластере Kubernetes
  mongodb:
    env:
      MONGO_INITDB_ROOT_USERNAME: sausage
      MONGO_INITDB_ROOT_PASSWORD: sausagepassword
      MONGO_INITDB_DATABASE: sausage-store
    containerPort: 27017
